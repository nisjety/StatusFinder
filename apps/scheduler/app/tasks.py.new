"""
Celery tasks for the scheduler application.

This module defines background tasks for handling crawler scheduling and monitoring.
"""
import asyncio
import json
import logging
import time
from datetime import datetime
from typing import Any, Dict, List, Optional, Tuple, Union

import httpx
from celery import Celery
from celery.schedules import crontab
from celery.signals import worker_ready
from pymongo import MongoClient
from pymongo.database import Database
from redis import Redis

from app.config import settings
from app.deps import get_mongo_sync, get_redis_sync

logger = logging.getLogger(__name__)

# Initialize Celery app
celery = Celery(
    "scheduler",
    broker=settings.RABBITMQ_URI
)

celery.conf.update(
    task_serializer="json",
    accept_content=["json"],
    result_serializer="json",
    timezone="UTC",
    enable_utc=True,
    worker_concurrency=4,
    task_acks_late=True,
    task_reject_on_worker_lost=True,
    worker_hijack_root_logger=False,
    task_track_started=True,
    task_time_limit=3600,  # 1 hour
    broker_connection_retry_on_startup=True
)
